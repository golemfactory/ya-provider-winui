<UserControl x:Class="GolemUI.DashboardSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GolemUI"
             xmlns:animated="clr-namespace:GolemUI.UI.AnimatedIcons" 
             mc:Ignorable="d" 
             d:DesignHeight="690" d:DesignWidth="1112"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:dvm="clr-namespace:GolemUI.DesignViewModel"
             d:DataContext ="{d:DesignInstance {x:Type dvm:MockupSettingsViewModel}, IsDesignTimeCreatable=True}"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UI/Themes/Defaults.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/GpuCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Borders/PageBackground.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/PinkButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Borders/BlueBorder.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Scrollbars/SettingsScrollView.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/GpuCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/SliderCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/AdvancedSettingsButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/HealthSettingsButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/GradientButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/GolemLogo.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/HyperLinkButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/ComboBox/MiningModeComboBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/TrackBar/Slider.xaml"/>
                <ResourceDictionary Source="/UI/Icons/Task_Type.xaml"/>
                <ResourceDictionary Source="/UI/Icons/CPU_icon.xaml"/>
                <ResourceDictionary Source="/UI/Icons/Status_Card_error.xaml"/>
                <ResourceDictionary Source="/UI/Icons/Status_Ready_icon.xaml"/>
                <ResourceDictionary Source="/UI/Themes/TextBox/TextBoxInError.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Validation/ValidationTemplate.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Labels/InfoLabel.xaml"/>
                <ResourceDictionary Source="/UI/Themes/ErrorMsg/BenchmarkErrorMsg.xaml"/>
                <ResourceDictionary>
                    <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:PerformanceThrottlingEnum"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Style="{DynamicResource PageBackground}" BorderThickness="1">
        <!--<Border.Background>
            <ImageBrush ImageSource="/__Media/screen_settings.png" Stretch="UniformToFill"/>
        </Border.Background>-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="88"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="88"/>

            </Grid.RowDefinitions>
            <Image  Grid.Column="2"  Source="/UI/Icons/DefaultStyle/png/Branding/app_logo.png" HorizontalAlignment="Right" VerticalAlignment="Top" Width="160" Margin="0,20,30,0"  Grid.RowSpan="2"/>
            <StackPanel Orientation="Horizontal"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0, 39, 0, 0" >
                <Border Width="232" Height="25" BorderThickness="1 0 0 0" BorderBrush="White" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20, 20, 0, 0">
                    <Label Margin ="26,-5" Padding="0"  Foreground="#FFFFFF" Content="Settings"  FontSize="24"></Label>
                </Border>
            </StackPanel>

            <!--<local:GpuMiningPanelUI x:Name="gpuMiningPanel" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible"/>-->

            <Grid Margin="50, 68, 30, 20" Width="auto" Height="auto" Grid.Row="1" Grid.ColumnSpan="3" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="45" />
                    <RowDefinition Height="55"/>
                    <RowDefinition Height="*" MinHeight="320" />



                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.92*" />
                    <ColumnDefinition Width="0.17*"/>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="0.17*"/>
                    <ColumnDefinition Width="2*" />

                </Grid.ColumnDefinitions>
                <UniformGrid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,7,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.RowSpan="2" Columns="2" Rows="1" Visibility="{Binding IsMiningProcessRunning, Converter={StaticResource BoolToHiddenConverter }}">
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0">
                        <Label VerticalAlignment="Bottom" Content="Estimated profit: " FontSize="15" FontWeight="Light" Margin="0" Padding="0,0,0,2"/>
                        <TextBlock VerticalAlignment="Bottom" FontFamily="Segoe UI Black" FontSize="24" Margin="1, 0, 0, 0" Padding="0" Text="{Binding Path=ExpectedProfit, Converter={StaticResource AmountConverter}, ConverterParameter=usdmonth}"/>
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,0">
                        <Label VerticalAlignment="Bottom" Content="Current Hashrate: "  FontSize="15" FontWeight="Light"  Padding="0,0,0,2"/>
                        <TextBlock VerticalAlignment="Bottom"   FontFamily="Segoe UI Black" FontSize="24" Foreground="#fff" Text="{Binding Path=HashRate, Converter={StaticResource HashRateConverter}, FallbackValue=Test}" />
                    </WrapPanel>
                </UniformGrid>


                <Button Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"   Grid.Column="4" IsEnabled="{Binding Path=BenchmarkReadyToRun}" Visibility="{Binding Path=IsBenchmarkNotRunning, Converter={StaticResource BoolToVisibleConverter}}"  Name="btnRunBenchmark" Style="{StaticResource GradientButtonStyle}"  Click="btnRunBenchmark_Click" >Run Benchmark</Button>
                <Button Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"   Grid.Column="4" IsEnabled="{Binding Path=BenchmarkIsRunning}" Visibility="{Binding Path=BenchmarkIsRunning, Converter={StaticResource BoolToVisibleConverter}}" Name="btnStopBenchmark" Style="{StaticResource GradientButtonStyle}" Click="btnStopBenchmark_Click" >Stop Benchmark</Button>



                <Border Grid.Row="2" Style="{DynamicResource BorderStyleBlueBox}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Grid.Column="0" >

                    <Grid Margin="0, 0, 0, 0"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.RowDefinitions>

                            <RowDefinition Height="60" />
                            <RowDefinition Height="0.7*" MaxHeight="300"/>
                            <RowDefinition Height="*" />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="*" />

                        </Grid.ColumnDefinitions>

                        <Label Margin="14,25,0,0" Grid.Row="0" Content="Task type" Foreground="#FFFFFF" FontFamily="SegoeUI" FontSize="20" HorizontalAlignment="Left" FontWeight="Bold"></Label>

                        <Image RenderOptions.BitmapScalingMode="HighQuality"  Source="/UI/Icons/DefaultStyle/png/Settings/TaskType.png" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="25,20,25,25" Stretch="Uniform" />
                        <StackPanel Grid.Row="2" Margin="0,28,0,0" HorizontalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox  Margin="0" Grid.Column="0" Style="{DynamicResource CheckBoxSlider}" IsChecked="{Binding IsGpuEnabled}" IsEnabled="{Binding IsBenchmarkNotRunning}" >
                                    <TextBlock FontSize="10"   Margin="8, 5, 5, 5"  Text="Mining (GPU)" Foreground="#FFFFFF" />
                                </CheckBox>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,13">
                                <CheckBox Margin="0" Style="{DynamicResource CheckBoxSlider}"  IsChecked="{Binding IsCpuEnabled}" IsEnabled="{Binding IsCpuMiningEnabledByNetwork}" >
                                    <TextBlock  FontSize="10" Margin="10, 1,0,0" TextWrapping="Wrap" Text="Golem Network (CPU)" Foreground="#FFFFFF" />
                                </CheckBox>

                            </StackPanel>
                        </StackPanel>
                    </Grid>

                </Border>
                <Border Grid.Row="2" Style="{DynamicResource BorderStyleBlueBox}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.4*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Image RenderOptions.BitmapScalingMode="HighQuality"  Source="/UI/Icons/DefaultStyle/png/Dashboard/Gpu.png" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="30, 10,0, 0" Stretch="Uniform" />
                        <local:PngSequence SequencePrefix="GPU\GPU_icon" TotalFilesCount="40"  LeadingZerosCount="4" FileExtension="png" Active="{Binding Path=BenchmarkIsRunning}"  VerticalAlignment="Top" Grid.Column="0" Grid.Row="1" Margin="30, 8,0, 0" />

                        <StackPanel Visibility="{Binding Path=BenchmarkIsRunning, Converter={StaticResource BoolToVisibleConverter}}"  Orientation="Horizontal" Grid.ColumnSpan="2" >
                            <Label Margin="22,22,0,0"  Content="GPU benchmark in progress " HorizontalAlignment="Left" FontSize="18" FontWeight="Bold" Foreground="#FFFFFF"></Label>
                            <animated:WorkingAnimIcon VerticalAlignment="Top" CircleCount="3"
                                                 Height="10"
                                                 AnimationFPS="60"
                                                 WaveWidth="1.2"
                                                 Width="20"
                                                 CircleSize="5.0"
                                                Margin="-5,37,0,0"
                                            />
                        </StackPanel>
                        <StackPanel Visibility="{Binding Path=BenchmarkIsRunning, Converter={StaticResource BoolToHiddenConverter}}"  Orientation="Horizontal" Grid.ColumnSpan="2" >
                            <Label Margin="22,22,0,0"  Content="{Binding Path=GPUMessage}" HorizontalAlignment="Left" FontSize="18" FontWeight="Bold" Foreground="#FFFFFF"></Label>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" Visibility="{Binding Path=BenchmarkError, Converter={StaticResource ErrorToVisibleConverter}}" Margin="20, 15, 10, 10">
                            <ContentPresenter Content="{StaticResource Status_Card_error}" Margin="0, 0, 0, 0"/>
                            <TextBox IsReadOnly="True" Style="{DynamicResource BenchmarkErrorMsg}" ToolTip="{Binding BenchmarkError}" TextWrapping="Wrap" Text="{Binding BenchmarkError}" Margin="5, 0, 10, 0" VerticalAlignment="Center"></TextBox>
                        </StackPanel>

                        <ScrollViewer Grid.Column="1" Grid.Row="2" Margin="25,4,0,0" Padding="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" Style="{DynamicResource SettingsScrollViewer}">
                            <ItemsControl Grid.Column="1" ItemsSource="{Binding GpuList}" Margin="0,0,0,0" >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" Margin="10,0,10,0" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0 0 0 10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="0,0,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <CheckBox IsEnabled="{Binding DataContext.ShouldGpuCheckBoxesBeEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" Grid.Column="0" IsChecked="{Binding Path=IsEnabledByUser}" Margin="0,2,5,0"  Style="{DynamicResource CheckBoxGpu}" />
                                                <TextBlock Grid.Column="1" TextWrapping="Wrap" FontFamily="Segoe Ui" FontWeight="Regular" Foreground="White" FontSize="13" Text="{Binding Path=DisplayName}" Margin="0"/>
                                            </Grid>
                                            <Label Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Segoe Ui" FontWeight="Light"  FontSize="12" Padding="0"  Content="Hashrate:" Margin="0, 5, 0, 3" />
                                            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Margin="5,3,0,0">
                                                <Label FontFamily="Segoe Ui" FontWeight="Bold"  FontSize="12" Content="{Binding Path=BenchmarkSpeed, Converter={StaticResource HashRateConverter}}" Padding="0" />
                                                <Label FontFamily="Segoe Ui" FontWeight="Bold"  FontSize="12" Margin="3,0,0,0" Visibility="{Binding Path=BenchmarkSpeedForDifferentThrottling, Converter={StaticResource BoolToVisibleConverter}}" Content="?" ToolTip="Performance mode changed - run benchmark again to get valid speed" Padding="0" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Left">
                                                <Label VerticalAlignment="Center"  FontFamily="Segoe Ui" FontWeight="Light" FontSize="12" Padding="0" Content="Mining ability:" Margin="0, 3, 10, 3" />
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Grid.Row="2" Margin="5,0,0,0" VerticalAlignment="Center" Orientation="Horizontal" ToolTip="{Binding Path=GPUError}">
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Grid Visibility="{Binding Path=IsPreInitialization, Converter={StaticResource BoolToVisibleConverter}}">
                                                        <ProgressBar Foreground="Gray" IsIndeterminate="True" Margin="0, 2, 0, 1" BorderThickness="0" Background="Transparent" />
                                                        <TextBlock Foreground="#aaa"  VerticalAlignment="Center">initializing...</TextBlock>
                                                    </Grid>
                                                    <Grid Visibility="{Binding Path=IsInitialization, Converter={StaticResource BoolToVisibleConverter}}">
                                                        <ProgressBar Foreground="Gray" Minimum="0" Maximum="1" Value="{Binding Path=DagProgress}" Margin="0, 2, 0, 1" BorderThickness="0" Background="Transparent" />
                                                        <TextBlock Foreground="#aaa"  VerticalAlignment="Center">initializing...</TextBlock>
                                                    </Grid>
                                                    <Grid Visibility="{Binding Path=IsEstimation, Converter={StaticResource BoolToVisibleConverter}}">
                                                        <ProgressBar Foreground="Gray" IsIndeterminate="True" Minimum="0" Maximum="1" Margin="0, 2, 0, 1" BorderThickness="0" Background="Transparent" />
                                                        <TextBlock Foreground="#aaa"  VerticalAlignment="Center">estimating...</TextBlock>
                                                    </Grid>
                                                </StackPanel>
                                                <StackPanel Visibility="{Binding Path=IsFinished, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Center" Orientation="Horizontal">
                                                    <Viewbox Width="20" Height="20" Visibility="{Binding Path=IsReadyForMining, Converter={StaticResource BoolToHiddenConverter}}">
                                                        <Canvas Height="20" Width="20">
                                                            <Canvas>
                                                                <Canvas.RenderTransform>
                                                                    <TransformGroup>
                                                                        <TranslateTransform X="-986.000000" Y="-714.000000" />
                                                                    </TransformGroup>
                                                                </Canvas.RenderTransform>
                                                                <Canvas>
                                                                    <Canvas.RenderTransform>
                                                                        <TransformGroup>
                                                                            <TranslateTransform X="320.000000" Y="160.000000" />
                                                                        </TransformGroup>
                                                                    </Canvas.RenderTransform>
                                                                    <Canvas>
                                                                        <Canvas.RenderTransform>
                                                                            <TransformGroup>
                                                                                <TranslateTransform X="429.000000" Y="299.000000" />
                                                                            </TransformGroup>
                                                                        </Canvas.RenderTransform>
                                                                        <Canvas>
                                                                            <Canvas.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <TranslateTransform X="153.000000" Y="76.000000" />
                                                                                </TransformGroup>
                                                                            </Canvas.RenderTransform>
                                                                            <Canvas>
                                                                                <Canvas.RenderTransform>
                                                                                    <TransformGroup>
                                                                                        <TranslateTransform X="0.000000" Y="119.000000" />
                                                                                    </TransformGroup>
                                                                                </Canvas.RenderTransform>
                                                                                <Canvas>
                                                                                    <Canvas.RenderTransform>
                                                                                        <TransformGroup>
                                                                                            <TranslateTransform X="84.000000" Y="60.000000" />
                                                                                        </TransformGroup>
                                                                                    </Canvas.RenderTransform>
                                                                                    <Path Data="M20,10 C20,4.47708129 15.5229302,0 10,0 C4.47722243,0 0,4.47708129 0,10 C0,15.5229187 4.47722243,20 10,20 C15.5229302,20 20,15.5229187 20,10 Z" Fill="#F36986" />
                                                                                    <Path Data="M16.1689432,2.12905883 C17.50248,3.82827758 18.2979016,5.97015383 18.2979016,8.29788207 C18.2979016,13.8206482 13.8206791,18.2978821 8.29790157,18.2978821 C5.97008777,18.2978821 3.8283098,17.5024414 2.12895843,16.1688232 C3.95971002,18.5014343 6.80488363,20 10,20 C15.5229302,20 20,15.5229187 20,10 C20,6.80480957 18.501488,3.95965578 16.1689432,2.12905883 Z" Fill="#FC476E" />
                                                                                    <Path Data="M10.6350248,11.6796875 L9.36497521,11.6796875 C9.11346815,11.6796875 8.90957651,11.4758301 8.90957651,11.2242127 L8.90957651,5.47424316 C8.90957651,5.22262574 9.11346815,5.01876832 9.36497521,5.01876832 L10.6350248,5.01876832 C10.8865319,5.01876832 11.0905761,5.22262574 11.0905761,5.47424316 L11.0905761,11.2242127 C11.0905761,11.4758301 10.8866845,11.6796875 10.6350248,11.6796875 L10.6350248,11.6796875 Z" Fill="#FFD2E3" />
                                                                                    <Path Data="M10.6351774,5.01876832 L9.8121328,5.01876832 C10.0636399,5.01876832 10.2675315,5.22262574 10.2675315,5.47424316 L10.2675315,11.2242127 C10.2675315,11.4758301 10.0636399,11.6796875 9.8121328,11.6796875 L10.6351774,11.6796875 C10.8866845,11.6796875 11.0905761,11.4756775 11.0905761,11.2242127 L11.0905761,5.47424316 C11.0905761,5.22262574 10.8866845,5.01876832 10.6351774,5.01876832 L10.6351774,5.01876832 Z" Fill="#FFBBD7" />
                                                                                    <Path Data="M10,15.3048706 C9.39778712,15.3048706 8.90957651,14.8165894 8.90957651,14.2144775 L8.90957651,14.2141723 C8.90957651,13.6120605 9.39778712,13.1237793 10,13.1237793 C10.6022129,13.1237793 11.0905761,13.6120605 11.0905761,14.2141723 L11.0905761,14.2144775 C11.0905761,14.8165894 10.6022129,15.3048706 10,15.3048706 L10,15.3048706 Z" Fill="#FFD2E3" />
                                                                                    <Path Data="M10,13.1237793 C9.91224726,13.1237793 9.8269363,13.1344605 9.74513546,13.1539917 C10.2244945,13.2688904 10.580847,13.6997986 10.580847,14.214325 C10.580847,14.7286987 10.2244945,15.1597595 9.74513546,15.2745056 C9.8269363,15.2941895 9.91224726,15.3048706 10,15.3048706 C10.6023655,15.3048706 11.0905761,14.8165894 11.0905761,14.214325 C11.0905761,13.6120605 10.6022129,13.1237793 10,13.1237793 L10,13.1237793 Z" Fill="#FFBBD7" />
                                                                                </Canvas>
                                                                            </Canvas>
                                                                        </Canvas>
                                                                    </Canvas>
                                                                </Canvas>
                                                            </Canvas>
                                                        </Canvas>
                                                    </Viewbox>
                                                    <Viewbox Width="20" Height="20" Visibility="{Binding Path=IsReadyForMining, Converter={StaticResource BoolToVisibleConverter}}">
                                                        <Canvas Height="25" Width="25">
                                                            <Canvas>
                                                                <Canvas.RenderTransform>
                                                                    <TransformGroup>
                                                                        <TranslateTransform X="-595.000000" Y="-370.000000" />
                                                                    </TransformGroup>
                                                                </Canvas.RenderTransform>
                                                                <Canvas>
                                                                    <Canvas.RenderTransform>
                                                                        <TransformGroup>
                                                                            <TranslateTransform X="320.000000" Y="160.000000" />
                                                                        </TransformGroup>
                                                                    </Canvas.RenderTransform>
                                                                    <Canvas>
                                                                        <Canvas.RenderTransform>
                                                                            <TransformGroup>
                                                                                <TranslateTransform X="275.000000" Y="210.000000" />
                                                                            </TransformGroup>
                                                                        </Canvas.RenderTransform>
                                                                        <Ellipse Fill="#04C4BB" Canvas.Left="0" Canvas.Top="0" Width="25" Height="25" />
                                                                        <Path Data="M9.30599369,18.1388013 L15.7334385,24.5662461 C21.0567823,23.1466877 25,18.29653 25,12.5 C25,12.3817035 25,12.2634069 25,12.1451104 L19.9526814,7.49211356 L9.30599369,18.1388013 Z" Fill="#0396C7" />
                                                                        <Canvas>
                                                                            <Canvas.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <TranslateTransform X="4.199527" Y="6.171136" />
                                                                                </TransformGroup>
                                                                            </Canvas.RenderTransform>
                                                                            <Path Data="M8.6159306,9.1285489 C9.16798107,9.68059937 9.16798107,10.6269716 8.6159306,11.1790221 L7.47239748,12.3225552 C6.920347,12.8746057 5.97397476,12.8746057 5.42192429,12.3225552 L0.414037855,7.27523659 C-0.138012618,6.72318612 -0.138012618,5.77681388 0.414037855,5.22476341 L1.55757098,4.08123028 C2.10962145,3.52917981 3.05599369,3.52917981 3.60804416,4.08123028 L8.6159306,9.1285489 Z" Fill="#FFFFFF" />
                                                                            <Path Data="M12.9929022,0.414037855 C13.5449527,-0.138012618 14.4913249,-0.138012618 15.0433754,0.414037855 L16.1869085,1.55757098 C16.738959,2.10962145 16.738959,3.05599369 16.1869085,3.60804416 L7.51182965,12.2436909 C6.95977918,12.7957413 6.01340694,12.7957413 5.46135647,12.2436909 L4.31782334,11.1001577 C3.76577287,10.5481073 3.76577287,9.60173502 4.31782334,9.04968454 L12.9929022,0.414037855 Z" Fill="#FFFFFF" />
                                                                        </Canvas>
                                                                    </Canvas>
                                                                </Canvas>
                                                            </Canvas>
                                                        </Canvas>
                                                    </Viewbox>
                                                </StackPanel>
                                            </StackPanel>
                                            <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,3,0,3">
                                                <Label VerticalAlignment="Center" FontFamily="Segoe Ui" FontSize="12" Padding="0" FontWeight="Light" Content="Mode:" ToolTip="{Binding PhoenixPerformanceThrottlingDebug}"/>
                                            </StackPanel>
                                            <ComboBox HorizontalAlignment="Left" Grid.Column="1" Grid.Row="3" Margin="5,0,0,0" IsEnabled="{Binding DataContext.IsBenchmarkNotRunning, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" ItemsSource="{Binding Source={StaticResource dataFromEnum}}"  FontSize="10" FontFamily="Segoe UI" Padding="0" Style="{DynamicResource MiningModeComboBox}"  SelectedItem="{Binding Path=SelectedMiningMode}"  Width="90" >

                                            </ComboBox>
                                        </Grid>


                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </Border>
                <Grid Grid.Row="2" Grid.Column="4" >
                    <Grid.ColumnDefinitions>

                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.28*" />
                        <RowDefinition Height="0.3*" />
                        <RowDefinition Height="0.9*" />
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="32,15"  Visibility="{Binding Path=IsCpuMiningEnabledByNetwork, Converter={StaticResource BoolToHiddenConverter}}">Coming soon!</Label>
                    <Border MinHeight="160" Style="{DynamicResource BorderStyleBlueBox}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="0"  Grid.Column="0" Opacity="{Binding CpuOpacity}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.45*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>




                            <Label Margin="25,20,0,0" Content="CPU" FontSize="22" FontWeight="Bold" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Foreground="#FFFFFF" />

                            <Image Grid.Row="1" RenderOptions.BitmapScalingMode="HighQuality"  Source="/UI/Icons/DefaultStyle/png/Dashboard/Cpu.png"  HorizontalAlignment="Center" VerticalAlignment="Top" Margin="32, 13, 0, 10" Stretch="Uniform" />


                            <StackPanel Orientation="Vertical"  Grid.Row="1" Grid.Column="1" Margin="0,0,40,10">
                                <Slider  Height="30" Style="{StaticResource Horizontal_Slider}" x:Name="slider" Value="{Binding Path=ActiveCpusCount, Mode=TwoWay}" HorizontalAlignment="Stretch"  Grid.Row="1" VerticalAlignment="Top" Margin="42,9,0,0" Minimum="0" Maximum="{Binding TotalCpusCount, Mode=OneWay}" IsEnabled="{Binding IsCpuMiningEnabledByNetwork}"/>

                                <StackPanel  Orientation="Horizontal"  HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,2,0,0">
                                    <Label Content="CPU Threads:" FontWeight="Light" Margin="0" Padding="0,0,5,0" FontSize="18"/>
                                    <Label Content="{Binding ActiveCpusCountAsString, Mode=OneWay}" FontFamily="Segoe UI" FontWeight="Bold" Margin="0" Padding="0" FontSize="18" />
                                    <Label Content="/" FontSize="18" FontWeight="Bold" Margin="0" Padding="0" Foreground="#FFFFFF"  />
                                    <Label Content="{Binding  TotalCpusCountAsString,  Mode=OneWay}" FontWeight="Bold" FontSize="18"  Margin="0" Padding="0"  />
                                </StackPanel>
                            </StackPanel>

                        </Grid>
                    </Border>
                    <Border MinHeight="100" Style="{DynamicResource BorderStyleBlueBox}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2"  Grid.Column="0">
                        <Grid Margin="28,14,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Height="25">
                                <Label Padding="0" Margin="0" Content="Node name" FontFamily="Segoe UI" FontWeight="Bold" FontSize="19" VerticalAlignment="Bottom"/>
                                <Label Margin="5,0,0,3" Padding="0"  Content="(Click name to edit)" FontWeight="Light" FontSize="10" VerticalAlignment="Bottom"/>
                            </StackPanel>
                            <Border BorderThickness="0,0,0,2"   Margin="0, 0,40,0"  Grid.Row="1" Height="20">
                                <StackPanel>
                                    <TextBox  MaxLength="45" Name="txtNodeName" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" BorderThickness="0"  VerticalAlignment="Top" Background="Transparent" Foreground="#eee" CaretBrush="#fff"  Padding="0,0,0,0" Margin="0">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding Path="NodeName" UpdateSourceTrigger="PropertyChanged" Delay="100">
                                                <Binding.ValidationRules>
                                                    <lc:NodeNameValidator xmlns:lc="clr-namespace:GolemUI.Validators"  ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                </StackPanel>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#45405D" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=txtNodeName, Path=(Validation.HasError)}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#FC476E" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=txtNodeName, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding NodeNameHasChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#0FB2AB" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                            </Border>
                            <Label Margin="2,-4,0,0" Padding="0" Grid.Row="2" Foreground="#0FB2AB" >
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Setter Property="Visibility" Value="Collapsed" />

                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=txtNodeName, Path=(Validation.HasError)}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=txtNodeName, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding NodeNameHasChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                                ✓ Saved
                            </Label>
                        </Grid>
                    </Border>
                </Grid>

            </Grid>
            <Button x:Name="BtnGolemLogo" Style="{StaticResource GolemLogoStyle}" Click="BtnGolemLogo_Click" Grid.Row="2" Grid.Column="5"  HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="250" Margin="0,0,30,38" />
            <StackPanel Orientation="Horizontal" Grid.Row="2" >
                <Button Cursor="Hand" IsEnabled="{Binding Path=AdvancedSettingsButtonEnabled}" Background="Transparent"  BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" x:Name="BtnAdvancedSettings" Click="BtnAdvancedSettings_Click" Margin="50,0,0,47" Style="{StaticResource AdvancedSettingsButtonStyle}"/>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
